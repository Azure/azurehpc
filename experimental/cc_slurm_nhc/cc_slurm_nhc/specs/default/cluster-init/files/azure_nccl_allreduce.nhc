#!/bin/bash

# Check for NVlink ssues by running NCCL allreduce.
# Expected performance is > 228 GB/s

NCCL_ARGS_2="-b 1G -f 2 -g 1 -e 2G -c 1"


function find_vm() {
   vm_size=`/opt/cycle/jetpack/bin/jetpack config azure.metadata.compute.vmSize | tr '[:upper:]' '[:lower:]'`
   dbg "vm_size=$vm_size"
   case $vm_size in
        standard_nd96isr_h100_v5)
           MPI_MODULE="mpi/hpcx"
           MPI_ARGS_2="-np 8 --map-by ppr:8:node -bind-to none -mca coll_hcoll_enable 0 --allow-run-as-root"
           ENVIRON_VARS_2="-x LD_LIBRARY_PATH=/usr/local/nccl-rdma-sharp-plugins/lib:$LD_LIBRARY_PATH -x NCCL_IB_PCI_RELAXED_ORDERING=1 -x CUDA_DEVICE_ORDER=PCI_BUS_ID -x NCCL_SOCKET_IFNAME=eth0 -x NCCL_TOPO_FILE=/opt/microsoft/ndv5-topo.xml -x NCCL_MIN_NCHANNELS=32"
           NCCL_ARGS_2="-b 16G -f 2 -g 1 -e 16G -c 1"
           ;;
        standard_nd96amsr_a100_v4)
           MPI_MODULE="mpi/hpcx"
           MPI_ARGS_2="-np 8 --map-by ppr:8:node -bind-to numa -mca coll_hcoll_enable 0 --allow-run-as-root"
           ENVIRON_VARS_2="-x LD_LIBRARY_PATH=/usr/local/nccl-rdma-sharp-plugins/lib:$LD_LIBRARY_PATH -x NCCL_IB_PCI_RELAXED_ORDERING=1 -x UCX_IB_PCI_RELAXED_ORDERING=on -x UCX_TLS=tcp -x UCX_NET_DEVICES=eth0 -x CUDA_DEVICE_ORDER=PCI_BUS_ID -x NCCL_SOCKET_IFNAME=eth0 -x NCCL_TOPO_FILE=/opt/microsoft/ndv4-topo.xml"
           ;;
        standard_nd96asr_v4)
           MPI_MODULE="mpi/hpcx"
           MPI_ARGS_2="-np 8 --map-by ppr:8:node -bind-to numa -mca coll_hcoll_enable 0 --allow-run-as-root"
           ENVIRON_VARS_2="-x LD_LIBRARY_PATH=/usr/local/nccl-rdma-sharp-plugins/lib:$LD_LIBRARY_PATH -x NCCL_IB_PCI_RELAXED_ORDERING=1 -x UCX_IB_PCI_RELAXED_ORDERING=on -x UCX_TLS=tcp -x UCX_NET_DEVICES=eth0 -x CUDA_DEVICE_ORDER=PCI_BUS_ID -x NCCL_SOCKET_IFNAME=eth0 -x NCCL_TOPO_FILE=/opt/microsoft/ndv4-topo.xml"
           ;;
        standard_nc96ads_a100_v4)
           MPI_MODULE="mpi/openmpi"
           MPI_ARGS_2="-np 4 --map-by ppr:4:node -bind-to numa --allow-run-as-root"
           ENVIRON_VARS_2="-x NCCL_IB_DISABLE=1 -x NCCL_TOPO_FILE=/opt/microsoft/ncv4/topo.xml -x NCCL_GRAPH_FILE=/opt/microsoft/ncv4/graph.xml"
           ;;
        standard_nc48ads_a100_v4)
           MPI_MODULE="mpi/openmpi"
           MPI_ARGS_2="-np 2 --map-by ppr:2:node -bind-to numa --allow-run-as-root"
           ENVIRON_VARS_2="-x NCCL_IB_DISABLE=1 -x NCCL_TOPO_FILE=/opt/microsoft/ncv4/nc48v4-topo.xml -x NCCL_GRAPH_FILE=/opt/microsoft/ncv4/nc48v4-graph.xml"
           ;;
        *)
           MPI_MODULE="NotFound"
   esac
}


function collect_nccl_allreduce_data() {

   nccl_allreduce_out=$(source /etc/profile.d/modules.sh && module load $MPI_MODULE && mpirun $MPI_ARGS_2 $ENVIRON_VARS_2 /opt/nccl-tests/build/all_reduce_perf $NCCL_ARGS_2)
   nccl_allreduce_out_rc=$?
   if [[ $nccl_allreduce_out_rc != 0 ]]; then
      log "nccl_allreduce_freq_out"
      die 1 "$FUNCNAME: nccl_allreduce returned error code $nccl_allreduce_out_rc"
   fi
   IFS=$'\n'
   nccl_allreduce_out_lines=( $nccl_allreduce_out )
   IFS=$' \t\n'
}


function check_nccl_allreduce() {

   EXP_NCCL_ALLREDUCE_BW=$1
   REPEATS="${2:-1}"

   if [ -f /opt/cycle/jetpack/bin/jetpack ]; then
      find_vm
      if [ $MPI_MODULE == "NotFound" ]; then
         log "Warning : $vm_size is not supported, NCCL test skipped"
         return 0
      fi
   else
      log "Warning: NHC is not running in Azure Cyclecloud, skip NCCL allreduce test."
      return 0
   fi

   for iter in $(seq 1 $REPEATS)
   do
      collect_nccl_allreduce_data

      for ((i=0; i<${#nccl_allreduce_out_lines[*]}; i++))
      do
         if [[ "${nccl_allreduce_out_lines[$i]//FAILED}" != "${nccl_allreduce_out_lines[$i]}" ]]
         then
            log "$nccl_allreduce_out"
            die 1 "$FUNCNAME: NCCL allreduce, Out of bounds values failed"
            return 1
         fi
         if [[ "${nccl_allreduce_out_lines[$i]//bandwidth}" != "${nccl_allreduce_out_lines[$i]}" ]]
         then
            IFS=$' \t\n'
            nccl_allreduce_out_line=( ${nccl_allreduce_out_lines[$i]} )
            avg_bus_bw=${nccl_allreduce_out_line[5]}
            dbg "Measured Avg NCCL allreduce bus BW $avg_bus_bw GB/s (expected >=$EXP_NCCL_ALLREDUCE_BW GB/s)"
            break
         fi
      done

      if (( $(echo "$avg_bus_bw < $EXP_NCCL_ALLREDUCE_BW" | bc -l) ))
      then
         dbg "$nccl_allreduce_out"
         log "Iteration ${iter} of ${REPEATS} failed: NCCL allreduce bandwidth $avg_bus_bw GB/s < $EXP_NCCL_ALLREDUCE_BW GB/s"
      else
         return 0
      fi
   done

   die 1 "$FUNCNAME: NCCL allreduce, BUS BW (expected >=$EXP_NCCL_ALLREDUCE_BW GB/s, but measured $avg_bus_bw GB/s)"
   return 1
}
