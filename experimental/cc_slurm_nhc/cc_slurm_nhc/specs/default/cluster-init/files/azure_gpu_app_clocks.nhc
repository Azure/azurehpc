#!/bin/bash

# Check if application GPU clock frequencies are set to their maximum values, if not will attempt to set them.

GPU_QUERY_CLOCKS="clocks.max.memory,clocks.applications.memory,clocks.max.graphics,clocks.applications.graphics"


function collect_clocks_data() {

   gpu_freq_out=$(nvidia-smi --query-gpu=$GPU_QUERY_CLOCKS --format=csv,noheader,nounits)
   gpu_freq_out_rc=$?
   if [[ $gpu_freq_out_rc != 0 ]]; then
      log "$gpu_freq_out"
      die 1 "$FUNCNAME: nvidia-smi (get clock freqs) returned error code $gpu_freq_out_rc"
   fi
   IFS=$'\n'
   gpu_freq_out_lines=( $gpu_freq_out )
   IFS=$' \t\n'
}


function check_app_gpu_clocks() {

   collect_clocks_data

   for ((i=0; i<${#gpu_freq_out_lines[*]}; i++))
   do
      IFS=$', '
      gpu_freq_out_line=( ${gpu_freq_out_lines[$i]} )
      IFS=$' \t\n'
      if [[ ${gpu_freq_out_line[0]} -gt ${gpu_freq_out_line[1]} || ${gpu_freq_out_line[2]} -gt ${gpu_freq_out_line[3]} ]]; then
	 log "Warning: GPU Id $i: GPU memory freq (max,current)= (${gpu_freq_out_line[0]},${gpu_freq_out_line[1]}) MHz, GPU graphics freq (max,current) = (${gpu_freq_out_line[2]},${gpu_freq_out_line[3]}) MHz"
	 log "Attempting to set application GPU clock frequencies to maximum frequencies"
         set_gpu_freq_out=$(nvidia-smi -i $i -ac ${gpu_freq_out_line[0]},${gpu_freq_out_line[2]})
         set_gpu_freq_out_rc=$?
         if [[ $set_gpu_freq_out_rc != 0 ]]; then
            log "$set_gpu_freq_out"
            die 1 "$FUNCNAME: nvidia-smi (set gpu max clock freqs) returned error code $set_gpu_freq_out_rc"
         fi
         log "On GPU Id $i: $set_gpu_freq_out"
      else
         dbg "GPU Id $i: max application GPU clocks are already set, GPU memory is  ${gpu_freq_out_line[0]} MHz and GPU graphics is ${gpu_freq_out_line[2]} MHz"
      fi
done
return 0
}
