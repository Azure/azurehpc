#!/bin/bash

# Check if application GPU clock frequencies are set to their maximum values, if not will attempt to set them.

GPU_QUERY="clocks.max.memory,clocks.applications.memory,clocks.max.graphics,clocks.applications.graphics"

function check_app_gpu_clocks() {
for device in {0..7};
do
      gpu_freq_out=$(nvidia-smi -i $device --query-gpu=$GPU_QUERY --format=csv,noheader,nounits)
      gpu_freq_out_rc=$?
      if [[ $gpu_freq_out_rc != 0 ]]
      then
         log "$gpu_freq_out"
         die 1 "$FUNCNAME: nvidia-smi (get gpu freqs) returned error code $gpu_freq_out_rc"
      fi
      IFS=$', '
      gpu_freq_line=( $gpu_freq_out )
      IFS=$' \t\n'
      if [[ ${gpu_freq_line[0]} -gt ${gpu_freq_line[1]} || ${gpu_freq_line[2]} -gt ${gpu_freq_line[3]} ]]; then
	 log "Warning: GPU Id: $device, GPU memory freq (max,current)= (${gpu_freq_line[0]},${gpu_freq_line[1]}) MHz, GPU graphics freq (max,current) = (${gpu_freq_line[2]},${gpu_freq_line[3]}) MHz"
	 log "Attempting to set application GPU clock frequencies to maximum frequencies"
         set_gpu_freq_out=$(nvidia-smi -i $device -ac ${gpu_freq_line[0]},${gpu_freq_line[2]})
         set_gpu_freq_out_rc=$?
         if [[ $set_gpu_freq_out_rc != 0 ]]; then
            log "$set_gpu_freq_out"
            die 1 "$FUNCNAME: nvidia-smi (set gpu max freqs) returned error code $set_gpu_freq_out_rc"
         fi
         log "On GPU Id $device, $set_gpu_freq_out"
	 return 0
      else
         dbg "GPU Id $device, max application GPU clocks are already set, GPU memory is  ${gpu_freq_line[0]} MHz and GPU graphics is ${gpu_freq_line[2]} MHz"
	 return 0
      fi
done
}
